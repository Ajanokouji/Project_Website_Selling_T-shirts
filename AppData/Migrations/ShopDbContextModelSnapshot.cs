// <auto-generated />
using System;
using AppData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppData.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppData.Data.Anh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("anhs");
                });

            modelBuilder.Entity("AppData.Data.ChatLieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("chatLieus");
                });

            modelBuilder.Entity("AppData.Data.ChiTietSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdAnh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCL")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKC")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdLoai")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAnh");

                    b.HasIndex("IdCL");

                    b.HasIndex("IdKC");

                    b.HasIndex("IdLoai");

                    b.HasIndex("IdMS");

                    b.HasIndex("IdSP");

                    b.ToTable("chiTietSanPhams");
                });

            modelBuilder.Entity("AppData.Data.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("chucVus");
                });

            modelBuilder.Entity("AppData.Data.GiamGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MucGiamGiaPhanTram")
                        .HasColumnType("float");

                    b.Property<double>("MucGiamGiaTienMat")
                        .HasColumnType("float");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("giamGias");
                });

            modelBuilder.Entity("AppData.Data.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.ToTable("gioHangs");
                });

            modelBuilder.Entity("AppData.Data.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GioHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCTSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GioHangId");

                    b.HasIndex("IdCTSP");

                    b.ToTable("gioHangChiTiets");
                });

            modelBuilder.Entity("AppData.Data.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayShip")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDTNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDTNguoiShip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TienShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.HasIndex("IdNV");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("AppData.Data.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("IdHD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCTSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdGiamGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdHD", "IdCTSP");

                    b.HasIndex("IdCTSP");

                    b.HasIndex("IdGiamGia");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.Data.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("khachHangs");
                });

            modelBuilder.Entity("AppData.Data.KichCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("kichCos");
                });

            modelBuilder.Entity("AppData.Data.Loai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("loais");
                });

            modelBuilder.Entity("AppData.Data.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("mauSacs");
                });

            modelBuilder.Entity("AppData.Data.NhanVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCV");

                    b.ToTable("nhanViens");
                });

            modelBuilder.Entity("AppData.Data.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("sanPhams");
                });

            modelBuilder.Entity("AppData.Data.ChiTietSanPham", b =>
                {
                    b.HasOne("AppData.Data.Anh", "anh")
                        .WithMany("chiTietSanPhams")
                        .HasForeignKey("IdAnh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.ChatLieu", "chatLieu")
                        .WithMany("chiTietSanPhams")
                        .HasForeignKey("IdCL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.KichCo", "kichCo")
                        .WithMany("chiTietSanPhams")
                        .HasForeignKey("IdKC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.Loai", "loai")
                        .WithMany("chiTietSanPhams")
                        .HasForeignKey("IdLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.MauSac", "mauSac")
                        .WithMany("chiTietSanPhams")
                        .HasForeignKey("IdMS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.SanPham", "sanPham")
                        .WithMany("chiTietSanPhams")
                        .HasForeignKey("IdSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("anh");

                    b.Navigation("chatLieu");

                    b.Navigation("kichCo");

                    b.Navigation("loai");

                    b.Navigation("mauSac");

                    b.Navigation("sanPham");
                });

            modelBuilder.Entity("AppData.Data.GioHang", b =>
                {
                    b.HasOne("AppData.Data.KhachHang", "khachHang")
                        .WithMany("gioHangs")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khachHang");
                });

            modelBuilder.Entity("AppData.Data.GioHangChiTiet", b =>
                {
                    b.HasOne("AppData.Data.GioHang", null)
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("GioHangId");

                    b.HasOne("AppData.Data.ChiTietSanPham", "chiTietSanPham")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdCTSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chiTietSanPham");
                });

            modelBuilder.Entity("AppData.Data.HoaDon", b =>
                {
                    b.HasOne("AppData.Data.KhachHang", "khachHang")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.NhanVien", "nhanVien")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khachHang");

                    b.Navigation("nhanVien");
                });

            modelBuilder.Entity("AppData.Data.HoaDonChiTiet", b =>
                {
                    b.HasOne("AppData.Data.ChiTietSanPham", "chiTietSanPham")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdCTSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.GiamGia", "giamGia")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdGiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Data.HoaDon", "hoaDon")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chiTietSanPham");

                    b.Navigation("giamGia");

                    b.Navigation("hoaDon");
                });

            modelBuilder.Entity("AppData.Data.NhanVien", b =>
                {
                    b.HasOne("AppData.Data.ChucVu", "chucVu")
                        .WithMany("nhanViens")
                        .HasForeignKey("IdCV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chucVu");
                });

            modelBuilder.Entity("AppData.Data.Anh", b =>
                {
                    b.Navigation("chiTietSanPhams");
                });

            modelBuilder.Entity("AppData.Data.ChatLieu", b =>
                {
                    b.Navigation("chiTietSanPhams");
                });

            modelBuilder.Entity("AppData.Data.ChiTietSanPham", b =>
                {
                    b.Navigation("gioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.Data.ChucVu", b =>
                {
                    b.Navigation("nhanViens");
                });

            modelBuilder.Entity("AppData.Data.GiamGia", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.Data.GioHang", b =>
                {
                    b.Navigation("gioHangChiTiets");
                });

            modelBuilder.Entity("AppData.Data.HoaDon", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.Data.KhachHang", b =>
                {
                    b.Navigation("gioHangs");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("AppData.Data.KichCo", b =>
                {
                    b.Navigation("chiTietSanPhams");
                });

            modelBuilder.Entity("AppData.Data.Loai", b =>
                {
                    b.Navigation("chiTietSanPhams");
                });

            modelBuilder.Entity("AppData.Data.MauSac", b =>
                {
                    b.Navigation("chiTietSanPhams");
                });

            modelBuilder.Entity("AppData.Data.NhanVien", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("AppData.Data.SanPham", b =>
                {
                    b.Navigation("chiTietSanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
